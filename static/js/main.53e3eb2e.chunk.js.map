{"version":3,"sources":["constants/routes.ts","contexts/drawer-context.tsx","components/Header.tsx","constants/menu.ts","components/MenuItem.tsx","components/MenuItemsList.tsx","components/Drawer.tsx","components/Layout.tsx","components/Loading.tsx","components/DashboardGrid.tsx","pages/dashboard.tsx","App.tsx","index.tsx"],"names":["ROUTES","DrawerContext","createContext","undefined","DrawerContextProvider","children","useState","isOpened","toggleIsOpened","Provider","value","useDrawerContext","context","useContext","Error","useStyles","makeStyles","appBar","background","color","icon","padding","title","margin","Header","classes","AppBar","className","Toolbar","IconButton","onClick","Typography","variant","DRAWER_LIST","route","literal","Icon","DashboardIcon","theme","createStyles","button","backgroundColor","palette","common","white","drawerText","fontSize","selected","listIcon","minWidth","paddingRight","spacing","MenuItem","link","ListItem","ListItemIcon","ListItemText","primary","to","MenuItemsList","pathname","useLocation","Grid","List","map","drawer","position","closed","transition","transitions","create","easing","sharp","duration","leavingScreen","width","overflowX","opened","enteringScreen","CustomDrawer","useTheme","isLargeScreen","useMediaQuery","breakpoints","up","Drawer","open","onClose","paper","clsx","root","textAlign","display","flexDirection","minHeight","container","flex","main","Layout","Loading","type","height","response","id","status","firstBlock","fontWeight","box","flexGrow","titleContainer","services","statusContainer","endpoints","endpointUrls","iconContainer","top","left","DashboardGrid","results","setResults","console","log","endPoints","arr","arrayResponse","a","url","apis","api","i","name","Promise","all","useEffect","apiResponses","fetch","method","apiResponseFulfilled","message","fetchAPIResponse","DashUp","push","filter","upStatus","length","DashDown","Box","item","xs","md","Paper","sx","style","result","elevation","justifyContent","DashboardPage","overflow","App","path","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53e3eb2e.chunk.js","sourcesContent":["export const ROUTES = {\n\tmain: \"/dashboard\",\n};\n","import { createContext, useState, useContext } from \"react\";\n\ntype DrawerContextType = {\n  isOpened: boolean;\n  toggleIsOpened: (value: boolean) => void;\n};\n\ntype DrawerContextProviderProps = {\n  children: React.ReactNode;\n};\n\nconst DrawerContext = createContext<DrawerContextType | undefined>(undefined);\n\nconst DrawerContextProvider = ({ children }: DrawerContextProviderProps) => {\n  const [isOpened, toggleIsOpened] = useState(false);\n\n  return (\n    <DrawerContext.Provider value={{ isOpened, toggleIsOpened }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n\nconst useDrawerContext = () => {\n  const context = useContext(DrawerContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useDrawerContext must be used within a DrawerContextProvider\"\n    );\n  }\n  return context;\n};\n\nexport { DrawerContextProvider, useDrawerContext };\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDrawerContext } from \"../contexts/drawer-context\";\n\nconst useStyles = makeStyles(() => ({\n\tappBar: {\n\t\tbackground: \"#42a5f5\",\n\t\tcolor: \"#fff\",\n\t},\n\ticon: {\n\t\tpadding: \"1rem\",\n\t},\n\ttitle: {\n\t\tmargin: \"auto\",\n\t},\n}));\n\nconst Header = () => {\n\tconst classes = useStyles();\n\tconst { isOpened, toggleIsOpened } = useDrawerContext();\n\treturn (\n\t\t<AppBar className={classes.appBar}>\n\t\t\t<Toolbar>\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t\tonClick={() => toggleIsOpened(!isOpened)}\n\t\t\t\t\tclassName={classes.icon}>\n\t\t\t\t\t{isOpened ? <ChevronLeftIcon /> : <MenuIcon />}\n\t\t\t\t</IconButton>\n\t\t\t\t<Typography variant='h6' className={classes.title}>\n\t\t\t\t\tLive Api Status,\n\t\t\t\t</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n\nexport default Header;\n","import { DrawerItem } from \"../ts\";\nimport { ROUTES } from \"./routes\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nexport const DRAWER_LIST: DrawerItem[] = [\n\t{\n\t\troute: ROUTES.main,\n\t\tliteral: \"Dashboard\",\n\t\tIcon: DashboardIcon,\n\t},\n];\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {\n\tcreateStyles,\n\tdarken,\n\tmakeStyles,\n\tTheme,\n} from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport { DrawerItem } from \"../ts\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tbutton: {\n\t\t\t\"&:hover\": {\n\t\t\t\tbackground: \"#8bf1ff\",\n\t\t\t\tcolor: \"#eee\",\n\t\t\t},\n\t\t\t\"&$selected\": {\n\t\t\t\tbackgroundColor: \"#0093c4\",\n\t\t\t\tcolor: theme.palette.common.white,\n\t\t\t},\n\t\t},\n\t\tdrawerText: {\n\t\t\t\"&>span\": {\n\t\t\t\tfontSize: \"1.5rem\",\n\t\t\t},\n\t\t},\n\t\tselected: {},\n\t\tlistIcon: {\n\t\t\tminWidth: \"auto\",\n\t\t\tpaddingRight: theme.spacing(2),\n\t\t},\n\n\t\ticon: {\n\t\t\tcolor: \"#eee\",\n\t\t},\n\t})\n);\n\ntype Props = DrawerItem & {\n\tselected?: boolean;\n\tonClick?: () => void;\n};\n\nconst MenuItem: React.FC<Props> = ({\n\troute,\n\tliteral,\n\tIcon,\n\tselected,\n\tonClick,\n}) => {\n\tconst classes = useStyles();\n\n\tconst link = (\n\t\t<ListItem\n\t\t\tbutton\n\t\t\tselected={selected}\n\t\t\tclasses={{\n\t\t\t\tselected: classes.selected,\n\t\t\t\tbutton: classes.button,\n\t\t\t}}\n\t\t\tonClick={onClick}>\n\t\t\t<ListItemIcon className={classes.listIcon}>\n\t\t\t\t<Icon className={classes.icon} />\n\t\t\t</ListItemIcon>\n\t\t\t<ListItemText primary={literal} className={classes.drawerText} />\n\t\t</ListItem>\n\t);\n\treturn route ? <Link to={route}>{link}</Link> : link;\n};\n\nexport default MenuItem;\n","import List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { DRAWER_LIST } from \"../constants/menu\";\nimport MenuItem from \"./MenuItem\";\n\nconst useStyles = makeStyles(() => ({\n\tpadding: {\n\t\tpadding: 0,\n\t},\n}));\n\nconst MenuItemsList = () => {\n\tconst classes = useStyles();\n\n\tconst { pathname } = useLocation();\n\n\treturn (\n\t\t<Grid>\n\t\t\t<List className={classes.padding}>\n\t\t\t\t{DRAWER_LIST.map(({ literal, route, Icon }) => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tIcon={Icon}\n\t\t\t\t\t\tliteral={literal}\n\t\t\t\t\t\troute={route}\n\t\t\t\t\t\tkey={route}\n\t\t\t\t\t\tselected={pathname === route}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Grid>\n\t);\n};\n\nexport default MenuItemsList;\n","import Drawer from \"@material-ui/core/Drawer\";\nimport MenuItemsList from \"./MenuItemsList\";\nimport clsx from \"clsx\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useDrawerContext } from \"../contexts/drawer-context\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tdrawer: {\n\t\tbackground: \"#ede7f6\",\n\t\tposition: \"static\",\n\t},\n\tclosed: {\n\t\ttransition: theme.transitions.create(\"width\", {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\twidth: theme.spacing(7) + 1,\n\t\toverflowX: \"hidden\",\n\t},\n\topened: {\n\t\twidth: \"240px\",\n\t\ttransition: theme.transitions.create(\"width\", {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n}));\n\nconst CustomDrawer = () => {\n\tconst classes = useStyles();\n\tconst { isOpened, toggleIsOpened } = useDrawerContext();\n\tconst theme = useTheme();\n\tconst isLargeScreen = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n\treturn (\n\t\t<Drawer\n\t\t\tvariant={isLargeScreen ? \"permanent\" : \"temporary\"}\n\t\t\topen={!isLargeScreen && isOpened ? true : false}\n\t\t\tonClose={() => toggleIsOpened(!isOpened)}\n\t\t\tclasses={{\n\t\t\t\tpaper: clsx(classes.drawer, {\n\t\t\t\t\t[classes.closed]: !isOpened,\n\t\t\t\t\t[classes.opened]: isOpened,\n\t\t\t\t}),\n\t\t\t}}>\n\t\t\t<MenuItemsList />\n\t\t</Drawer>\n\t);\n};\n\nexport default CustomDrawer;\n","import { ReactNode } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Drawer from \"./Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport { DrawerContextProvider } from \"../contexts/drawer-context\";\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\ttextAlign: \"center\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tminHeight: \"100vh\",\n\t},\n\tcontainer: {\n\t\tdisplay: \"flex\",\n\t\tflex: 1,\n\t},\n\tmain: {\n\t\tflex: 1,\n\t},\n}));\n\ntype Props = {\n\tchildren: NonNullable<ReactNode>;\n};\n\nconst Layout: React.FC<Props> = ({ children }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<DrawerContextProvider>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Header />\n\t\t\t\t<Toolbar />\n\t\t\t\t<div className={classes.container}>\n\t\t\t\t\t<Drawer />\n\t\t\t\t\t<main className={classes.main}>{children}</main>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DrawerContextProvider>\n\t);\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\n\nconst Loading = () => (\n\t<ReactLoading type={\"cubes\"} color={\"blue\"} height={\"20%\"} width={\"20%\"} />\n);\n\nexport default Loading;\n","import { makeStyles } from \"@material-ui/core\";\nimport { Paper, Box, Grid } from \"@material-ui/core\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport React, { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\n\n// import fetch from \"node-fetch\";\nimport apis from \"../constants/apis.json\";\nimport { width } from \"@material-ui/system\";\nimport { bottom } from \"@popperjs/core\";\n\nconst response = [\n\t{\n\t\tid: 1,\n\t\ttitle: \"Available Services\",\n\t\tstatus: true,\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: \"Down Services\",\n\t\tstatus: false,\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tfirstBlock: {\n\t\tfontSize: \"2rem\",\n\t\tfontWeight: \"bold\",\n\t},\n\tbox: {\n\t\tpadding: \"2rem\",\n\t\tflexGrow: 1,\n\t},\n\tcontainer: {\n\t\tpadding: \"3rem\",\n\t\tcolor: \"#eee\",\n\t},\n\ttitleContainer: {\n\t\theight: \"10rem\",\n\t\tpadding: \"3rem\",\n\t\tfontSize: \"1.4rem\",\n\t},\n\tservices: {\n\t\tfontSize: \"4rem\",\n\t\tcolor: \"#eee\",\n\t},\n\tstatusContainer: {\n\t\tposition: \"relative\",\n\t},\n\tendpoints: {\n\t\tpadding: \"1rem\",\n\t\tcolor: \"#111\",\n\t},\n\tendpointUrls: {\n\t\tfontSize: \"2rem\",\n\t\ttextAlign: \"left\",\n\t},\n\twhite: {\n\t\tcolor: \"#eee\",\n\t},\n\ticonContainer: {\n\t\tposition: \"absolute\",\n\t\ttop: \"-1rem\",\n\t\tleft: \"2rem\",\n\t\tpadding: \".5rem\",\n\t},\n}));\n\nconst currentDateTime = () => {\n\tlet dateObj = new Date();\n\treturn (\n\t\tdateObj.getDate() +\n\t\t\"/\" +\n\t\t(dateObj.getMonth() + 1) +\n\t\t\"/\" +\n\t\tdateObj.getFullYear() +\n\t\t\" @ \" +\n\t\tdateObj.getHours() +\n\t\t\":\" +\n\t\tdateObj.getMinutes() +\n\t\t\":\" +\n\t\tdateObj.getSeconds()\n\t);\n};\n\nexport default function DashboardGrid() {\n\tconst [results, setResults] = useState([] as any);\n\tconsole.log(results);\n\tconst endPoints = (arr: Array<any>) => {\n\t\tconst arrayResponse = arr.map(async (response) => {\n\t\t\treturn {\n\t\t\t\turl: apis.map((api, i) => {\n\t\t\t\t\tif (api.id === i + 1) {\n\t\t\t\t\t\treturn api.name;\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t}),\n\t\t\t\tstatus: response.status === 200 ? \"UP\" : \"DOWN\",\n\t\t\t};\n\t\t});\n\t\treturn Promise.all(arrayResponse);\n\t};\n\t// let endPoints: Array<any> = [];\n\tuseEffect(() => {\n\t\tasync function fetchAPIResponse(apis: Array<any>) {\n\t\t\ttry {\n\t\t\t\tconst apiResponses = apis.map((api) => {\n\t\t\t\t\treturn fetch(api.url, { method: \"GET\" });\n\t\t\t\t});\n\t\t\t\tconst apiResponseFulfilled = await Promise.all(apiResponses);\n\t\t\t\tconst response = await endPoints(apiResponseFulfilled);\n\t\t\t\tsetResults([...response]);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message || \"Problem while making api call!\");\n\t\t\t}\n\t\t}\n\t\tfetchAPIResponse(apis);\n\t}, []);\n\tconst classes = useStyles();\n\tlet DashUp: Array<any> = [];\n\tDashUp.push({\n\t\ttitle: \"Running Services\",\n\t\tvalue: results.filter((upStatus: any) => upStatus.status === \"UP\").length,\n\t});\n\tlet DashDown: Array<any> = [];\n\tDashDown.push({\n\t\ttitle: \"Running Services\",\n\t\tvalue: results.filter((upStatus: any) => upStatus.status === \"DOWN\").length,\n\t});\n\t// if (DashDown.length === 0) {\n\t// \tsetDashboardStatus(\"All Operational\");\n\t// } else if (DashDown.length > 0 && DashDown.length < results.length) {\n\t// \tsetDashboardStatus(\"Partially Down\");\n\t// } else {\n\t// \tsetDashboardStatus(\"All Down\");\n\t// }\n\n\tconst firstBlock = () => {\n\t\tif (DashDown.length === 0) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Paper className={classes.iconContainer}>\n\t\t\t\t\t\t<CheckCircleIcon color={\"success\"} sx={{ fontSize: \"3rem\" }} />\n\t\t\t\t\t</Paper>\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tclassName={classes.titleContainer}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#66bb6a\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className={classes.firstBlock}>All Up and Running</span>\n\t\t\t\t\t</Paper>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else if (DashDown.length > 0 && DashDown.length < results.length) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Paper className={classes.iconContainer}>\n\t\t\t\t\t\t<ErrorIcon color={\"warning\"} sx={{ fontSize: \"3rem\" }} />\n\t\t\t\t\t</Paper>\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tclassName={classes.titleContainer}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#ecb857\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className={classes.firstBlock}>Partially Up</span>\n\t\t\t\t\t</Paper>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Paper className={classes.iconContainer}>\n\t\t\t\t\t\t<CancelIcon color={\"error\"} sx={{ fontSize: \"3rem\" }} />\n\t\t\t\t\t</Paper>\n\t\t\t\t\t<Paper\n\t\t\t\t\t\tclassName={classes.titleContainer}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: \"#ef5350\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className={classes.firstBlock}>All Down</span>\n\t\t\t\t\t</Paper>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t};\n\tif (results.length !== 0) {\n\t\treturn (\n\t\t\t<Box className={classes.box}>\n\t\t\t\t<Grid container spacing={4} className={classes.box}>\n\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t<Paper className={classes.box}>\n\t\t\t\t\t\t<h1>Latest Status as per {currentDateTime()}</h1>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid> */}\n\t\t\t\t\t{/* Top Status Bar, */}\n\t\t\t\t\t<Grid item xs={12} md={4} className={classes.statusContainer}>\n\t\t\t\t\t\t{firstBlock()}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{response.map((item, i) => (\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tmd={4}\n\t\t\t\t\t\t\tclassName={classes.statusContainer}\n\t\t\t\t\t\t\tkey={i}>\n\t\t\t\t\t\t\t<Paper className={classes.iconContainer}>\n\t\t\t\t\t\t\t\t{i === 0 ? (\n\t\t\t\t\t\t\t\t\t<CheckCircleIcon\n\t\t\t\t\t\t\t\t\t\tcolor={\"success\"}\n\t\t\t\t\t\t\t\t\t\tsx={{ fontSize: \"3rem\" }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<CancelIcon color={\"error\"} sx={{ fontSize: \"3rem\" }} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\t\tclassName={classes.titleContainer}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackground: `${item.status ? \"#66bb6a\" : \"#ef5350\"}`,\n\t\t\t\t\t\t\t\t\ttextAlign: \"right\",\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<span>{item.title}</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span className={classes.services}>\n\t\t\t\t\t\t\t\t\t{i === 0 ? `${DashUp[0].value}` : `${DashDown[0].value}`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container spacing={3} className={classes.box}>\n\t\t\t\t\t{results.map((result: any, i: any) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Grid item xs={10} md={4}>\n\t\t\t\t\t\t\t\t<Paper className={classes.endpoints} elevation={0}>\n\t\t\t\t\t\t\t\t\t<pre className={classes.endpointUrls}>{result.url[i]}</pre>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={2} md={2}>\n\t\t\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\t\t\tclassName={classes.endpoints}\n\t\t\t\t\t\t\t\t\televation={0}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackground: `${\n\t\t\t\t\t\t\t\t\t\t\tresult.status === \"UP\" ? \"#66bb6a\" : \"#ef5350\"\n\t\t\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<h1 className={classes.white}>{result.status}</h1>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\tminHeight: \"100vh\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}>\n\t\t\t\t<Loading />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import DashboardGrid from \"../components/DashboardGrid\";\n\nconst DashboardPage = () => (\n\t<div style={{ background: \"#eee\", height: \"100vh\", overflow: \"hidden\" }}>\n\t\t<DashboardGrid />\n\t</div>\n);\n\nexport default DashboardPage;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport { ROUTES } from \"./constants/routes\";\nimport Layout from \"./components/Layout\";\nimport { DashboardPage } from \"./pages\";\n\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact render={() => <Redirect to={ROUTES.main} />} />\n\t\t\t\t<Route exact path={ROUTES.main} component={DashboardPage} />\n\t\t\t</Switch>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}